/*
 * Copyright 2019-2025 Cyface GmbH
 *
 * This file is part of the Cyface Energy Settings for Android.
 *
 * The Cyface Energy Settings for Android is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * The Cyface Energy Settings for Android is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with the Cyface Energy Settings for Android. If not, see <http://www.gnu.org/licenses/>.
 */
/**
 * Gradle's build file for this module.
 *
 * @author Armin Schnabel
 * @version 1.5.0
 * @since 1.0.0
 */

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.protobuf' // For Proto DataStore

android {
    namespace "de.cyface.energy_settings"
    compileSdk rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        versionName rootProject.ext.cyfaceEnergySettingsVersion

        testInstrumentationRunner rootProject.ext.testInstrumentationRunner
    }

    // Enable Proguard for the release build type.
    buildTypes {
        release {
            // Enable in app module to generate a single mapping.xml which can be uploaded to PlayStore
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // Enabling desugaring to support Java 8 and Java 11 features
    compileOptions {
        sourceCompatibility rootProject.ext.sourceCompatibility
        targetCompatibility rootProject.ext.targetCompatibility
    }

    kotlinOptions {
        jvmTarget = rootProject.ext.kotlinTargetJavaVersion
    }
}

dependencies {
    // Proto DataStore with SingleProcess support to store settings
    implementation  "com.google.protobuf:protobuf-javalite:${protobufVersion}"

    // Other Android libraries
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$rootProject.ext.lifecycleVersion"

    // To support Dialogs without androidx/SupportFragment dependencies
    implementation "com.afollestad.material-dialogs:core:$rootProject.ext.materialDialogsVersion"

    // Cyface dependencies
    api "de.cyface:android-utils:$rootProject.ext.cyfaceUtilsVersion"

    // Dependencies for instrumentation tests
    androidTestImplementation "androidx.test.ext:junit:$rootProject.ext.junitVersion"
    androidTestImplementation "androidx.test:rules:$rootProject.ext.rulesVersion"

    // Dependencies for local unit tests
    // - If Junit symbols are not resolvable in IntelliJ, make sure Build Variant is set to debug
    // - Loading another dependency (e.g. module) only it's production dependencies (compile) are loaded but not other dependencies (e.g. testCompile)
    testImplementation "androidx.test.ext:junit:$rootProject.ext.junitVersion"
    testImplementation "org.mockito:mockito-core:$rootProject.ext.mockitoVersion"
    // Optional - For better debuggable asserts
    testImplementation "org.hamcrest:hamcrest:$rootProject.ext.hamcrestVersion"
}

// Required for Proto DataStore
protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:$protobufVersion"
    }

    // Generates the java Protobuf-lite code for the Protobuf files in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}

// The gradle publish tasks is defined in a separate file:
apply from: 'publish.gradle'
